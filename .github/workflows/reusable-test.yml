name: 🧪 Test (shared)

on:
  workflow_call:
    inputs:
      node_version:
        required: true
        # this is limited to string | boolean | number (https://github.community/t/can-action-inputs-be-arrays/16457)
        # but we want to pass an array (node_version: "[14, 16, 18]"),
        # so we'll need to manually stringify it for now
        type: string

env:
  CI: true
  CYPRESS_INSTALL_BINARY: 0

jobs:
  build:
    name: ⚙️ Build
    runs-on: ubuntu-latest
    steps:
      - name: 🛑 Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.11.0

      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: ⎔ Setup node
        uses: actions/setup-node@v3
        with:
          node-version-file: ".nvmrc"
          cache: "yarn"

      - name: 📥 Install deps
        run: yarn --frozen-lockfile

      - name: 🏗 Build
        run: yarn build

      - name: 📅 Get Date
        run: echo "date=$(/bin/date -u +%s)" >> $GITHUB_ENV
        shell: bash

      - name: 📤 Cache build
        uses: actions/cache@v3
        with:
          path: ./build
          key: ${{ runner.os }}-build-${{ env.date }}

  test:
    name: "🧪 Test: (OS: ${{ matrix.os }} Node: ${{ matrix.node }})"
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          # - macos-latest
          - windows-latest
        node: ${{ fromJSON(inputs.node_version) }}
    runs-on: ${{ matrix.os }}
    steps:
      - name: 🛑 Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.11.0

      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: ⎔ Setup node ${{ matrix.node }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          cache: "yarn"

      - name: 📥 Install deps
        run: yarn --frozen-lockfile

      - name: 🧪 Run Primary Tests
        run: yarn test:primary

  ubuntu-integration:
    name: '👀 Integration Test: (OS: "ubuntu-latest" Node: "${{ matrix.node }}" Browser: "${{ matrix.browser }}")'
    needs: [build]
    strategy:
      fail-fast: false
      matrix:
        node: ${{ fromJSON(inputs.node_version) }}
        browser: ["chromium", "firefox"]

    runs-on: ubuntu-latest
    steps:
      - name: 🛑 Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.10.0

      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: ⎔ Setup node ${{ matrix.node }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          cache: "yarn"

      - name: 📥 Install deps
        run: yarn --frozen-lockfile

      - name: 👀 Get installed Playwright version
        id: playwright-version
        run: echo "PLAYWRIGHT_VERSION=$(node -e "console.log(require('./package-lock.json').dependencies['@playwright/test'].version)")" >> $GITHUB_ENV

      - name: 📤 Cache playwright binaries
        uses: actions/cache@v3
        id: playwright-cache
        with:
          path: |
            ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ env.PLAYWRIGHT_VERSION }}

      - name: 📥 Install Playwright
        run: npx playwright install --with-deps
        if: steps.playwright-cache.outputs.cache-hit != 'true'

      - name: 📥 Restore build
        uses: actions/cache@v3
        with:
          path: ./build
          key: ${{ runner.os }}-build-${{ env.date }}

      - name: 👀 Run Integration Tests ${{ matrix.browser }}
        run: |
          npm pkg delete pretest:integration
          npm pkg delete posttest:integration
          yarn test:integration --project=${{ matrix.browser }}

  macos-integration:
    name: '👀 Integration Test: (OS: "macos-latest" Node: "${{ matrix.node }}" Browser: "${{ matrix.browser }}")'
    needs: [build]
    strategy:
      fail-fast: false
      matrix:
        node: ${{ fromJSON(inputs.node_version) }}
        browser: ["webkit"]

    runs-on: macos-latest
    steps:
      - name: 🛑 Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.10.0

      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: ⎔ Setup node ${{ matrix.node }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          cache: "yarn"

      - name: 📥 Install deps
        run: yarn --frozen-lockfile

      - name: 👀 Get installed Playwright version
        id: playwright-version
        run: echo "PLAYWRIGHT_VERSION=$(node -e "console.log(require('./package-lock.json').dependencies['@playwright/test'].version)")" >> $GITHUB_ENV

      - name: 📤 Cache playwright binaries
        uses: actions/cache@v3
        id: playwright-cache
        with:
          path: |
            ~/Library/Caches/ms-playwright
          key: ${{ runner.os }}-playwright-${{ env.PLAYWRIGHT_VERSION }}

      - name: 📥 Install Playwright
        run: npx playwright install --with-deps
        if: steps.playwright-cache.outputs.cache-hit != 'true'

      - name: 📥 Restore build
        uses: actions/cache@v3
        with:
          path: ./build
          key: ${{ runner.os }}-build-${{ env.date }}

      - name: 👀 Run Integration Tests ${{ matrix.browser }}
        run: |
          npm pkg delete pretest:integration
          npm pkg delete posttest:integration
          yarn test:integration --project=${{ matrix.browser }}

  windows-integration:
    name: '👀 Integration Test: (OS: "windows-latest" Node: "${{ matrix.node }}" Browser: "${{ matrix.browser }}")'
    needs: [build]
    strategy:
      fail-fast: false
      matrix:
        node: ${{ fromJSON(inputs.node_version) }}
        browser: ["edge"]

    runs-on: windows-latest
    steps:
      - name: 🛑 Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.11.0

      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: ⎔ Setup node ${{ matrix.node }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          cache: "yarn"

      - name: 📥 Install deps
        run: yarn --frozen-lockfile

      - name: 👀 Get installed Playwright version
        id: playwright-version
        run: echo "PLAYWRIGHT_VERSION=$(node -e "console.log(require('./package-lock.json').dependencies['@playwright/test'].version)")" >> $GITHUB_ENV

      - name: 📤 Cache playwright binaries
        uses: actions/cache@v3
        id: playwright-cache
        with:
          path: |
            %USERPROFILE%\AppData\Local\ms-playwright
          key: ${{ runner.os }}-playwright-${{ env.PLAYWRIGHT_VERSION }}

      - name: 📥 Install Playwright
        run: npx playwright install --with-deps
        if: steps.playwright-cache.outputs.cache-hit != 'true'

      - name: 📥 Restore build
        uses: actions/cache@v3
        with:
          path: ./build
          key: ${{ runner.os }}-build-${{ env.date }}

      - name: 👀 Run Integration Tests ${{ matrix.browser }}
        run: |
          npm pkg delete pretest:integration
          npm pkg delete posttest:integration
          yarn test:integration --project=${{ matrix.browser }}
